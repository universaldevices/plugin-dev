
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "array",
  "description":"Extends Node Properties with protocol",
  "items": {
    "type": "object",
    "properties":{
      "id": {
        "type":"string",
        "description": "A unique id that is a) made up of A-Z, _, and 0-9 and b) starts with a capital letter, and c) max lenght is 30",
        "pattern":"^[A-Z][A-Z0-9_]*$",
        "maxLength": 30
      },
      "name": {
        "type": "string",
        "description": "This is the human readable name of this property such as Cool Setpoint. If there's an NLS file, this may be translated"
      },
      "protocol":{
        "type":"object",
        "description": "Protocol specific data and parameters",
        "properties": {
          "register_type": {
            "type":"string",
            "oneOf": [
              {
                "enum":["coil"],
                "description" : "Coil is like a switch that you can turn on/off"
              },
              {
                "enum":["discrete-input"],
                "description" : "Discrete Input is a read-only binary value (on/off)"
              },
              {
                "enum":["input"],
                "description" : "Input is a read-only unsigned 16 bit value"
              },
              {
                "enum":["holding"],
                "description" : "Holding is a read/write unsigned 16 bit value"
              }
            ],
            "default":"holding"
          },
          "register_address": {
            "type":"string",
            "pattern": "^0[xX][0-9a-fA-F]+$"
          },
          "register_data_type": {
            "type":"string",
            "oneOf": [
              {
                "enum":["int16"],
                "description": "Signed 16 bit number"
              },
              {
                "enum":["uint16"],
                "description": "Unsigned 16 bit number"
              },
              {
                "enum":["int32"],
                "description": "Signed 32 bit number"
              },
              {
                "enum":["int64"],
                "description": "Signed 32 bit number"
              },
              {
                "enum":["uint32"],
                "description": "Unsigned 32 bit number"
              },
              {
                "enum":["uint64"],
                "description": "Unsigned 32 bit number"
              },
              {
                "enum":["float32"],
                "description": "Signed 32 bit float"
              },
              {
                "enum":["float64"],
                "description": "Signed 32 bit float"
              },
              {
                "enum":["string"],
                "description": "A string"
              }
            ],
            "default": "uint16"
          },
          "num_registers":{
            "type":"integer",
            "default":1,
            "description": "The number of registers to be written to or read from at the time. Mostry for string values."
          },
          "eval":{
            "type":"string",
            "description": "A user defined python expression that uses available data in the register {rval}." 
          },
          "unit":{
            "type":"integer",
            "description": "The unit or slave number. Mostly used only for serial Modbus",
            "default":1
          }
        },
        "if":{
          "required":["register_type"]
        },
        "required": ["register_address"]
      },
      "is_settable": {
        "type": "boolean",
        "default":false, 
        "description": "Whether or not this property can also be set by the user. In the case of set, a command is created using the same UOM and editor"
      },
      "editor": {
        "$ref": "editor.schema.json",
        "description":"Editors help the UI with constraints ... "
      },
      "hide": {
        "type":"boolean",
        "description":"(Optional) Set to T or True, hides status in views but is available in program conditions",
        "default":false
      }
    },
    "if": {
      "allOf": [
        {
          "not": {
            "properties":{
              "protocol":{
                "type" :"null"
              }
            }
          }
        },
        {
          "not":{
            "properties" : 
            {
              "protocol":{
                "properties":{
                  "register_type": {
                    "type":"null"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "then":
    {
    "allOf": [
    {
    "if": {
      "anyOf": [
        {
          "properties" : 
          {
            "protocol":{
              "properties":{
                "register_type": {
                  "const": "coil"
                }
              }
            }
          }
        },
        {
          "properties" : 
          {
            "protocol":{
              "properties":{
                "register_type": {
                  "const": "holding"
                }
              }
            }
          }
        }
      ]
    },
    "then":{
      "required": ["is_settable"]
    }
  },
  { 
    "if":{
          "properties":{
            "protocol":{
              "properties":{
                "register_data_type":
                {
                  "const":"string"
                }
              }
           }
       }
    },
    "then":{
        "properties": { 
          "protocol": { 
              "required": ["num_registers"]
          }
      }
    }
  }
  ]
},
    "required": ["id", "name", "editor"],
    "additionalProperties": false
  }
}
